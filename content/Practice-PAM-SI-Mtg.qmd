---
title: Prep for PAM-SI Meeting
---

## Preparing for the PAM-SI Meeting

Open Science is a movement to make scientific research (including publications, data, software) transparent and accessible so that knowledge is shared. Here we will provide steps to prepare for the PAM-SI Meeting; in the future we will provide more general instructions for getting started as well as additional details on specific tasks/projects

## Tasks that MUST be completed by ALL participants prior to the PAM-SI Meeting

1.  Add Software Tools to your computer:

    1.  [Github Desktop](https://desktop.github.com/)

    2.  [RStudio](https://www.rstudio.com/products/rstudio/download/#download) (v2022.07.2 build 576 or later)

    3.  [R](https://www.r-project.org/)

    4.  [Zotero](https://www.zotero.org/)

    5.  Create a [Github Account](https://github.com/)

    6.  

2.  Create a Test Repository in Github (see help [here](https://docs.github.com/en/get-started/quickstart/create-a-repo))

3.  Clone your Test Repository to your local computer using Github Desktop:

    1.  File -\> Clone Repository -\> URL

    2.  Copy URL of your Test Repository on Github and save to your Documents -\> Github folder using the defaults. See [Introduction to Git/Github tutorial](https://rverse-tutorials.github.io/PSAW-2022/) for more help.

4.  Open project in RStudio. In the upper right hand corner of RStudio, select 'New Project' in the drop-down menu to add a new R Project from an Existing Project. Browse to find the appropriate folder in Documents-\> Github. In the lower right section of RStudio, select 'Files' and you will see the README.md file, which appears on the home page on your Github repository site.

5.  Modify the README.md file. Open this file and add text and possibly a link to this document. Save the file. If you are using the latest version of RStudio (with quarto), you can modify your file using the Source Code or the Visual Editor. This is an RMarkdown file, so you can use R markdown language, or, if you prefer, you can use the visual editor which is more user-friendly. If you copy/paste an existing document into the visual editor, much of the existing formatting will be retained.

6.  Commit & Push to Github. Open your project in Github Desktop; Github desktop will identify the changes you made (refresh if necessary). At the bottom left, describe the modifications you made to the document, and then select 'commit'. Once the commit goes through-- select 'Push to Origin' at the top. This will push changes to your Github repository.

7.  Open your Github repository and check out the changes on your README at the bottom of the page!

8.  Adopt this process as your daily habit of working on your projects locally and saving your data to Github.

For more information, see:

[Introduction to Git/Github Tutorial](https://rverse-tutorials.github.io/PSAW-2022/) (Eli Holmes, NMFS)

[Git for Humans](https://youtu.be/eWxxfttcMts) (Alice Bartlett)

[Happy Git with R](https://happygitwithr.com/) (Jenny Bryan)
