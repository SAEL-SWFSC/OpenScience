[
  {
    "objectID": "content/Getting-Started.html",
    "href": "content/Getting-Started.html",
    "title": "Getting Started",
    "section": "",
    "text": "Open Science is a movement to make scientific research (including publications, data, software) transparent and accessible so that knowledge is shared. Here we will provide steps to get started; in future sections we will provide additional details on specific tasks/projects\n\nEmbrace the Open Science Mindset! Learn more about this approach and why it matters at Openscapes.org and the Openscapes Approach Guide.\nAdd Software Tools\n\nGithub Desktop\nRStudio (v2022.07.2 build 576 or later)\nR\nCreate a Github Login\n\nCreate a Test Repository in Github (see help here)\nClone your Test Repository to your local computer using Github Desktop:\n\nFile -&gt; Clone Repository -&gt; URL\nCopy URL of your Test Repository on Github and save to your Documents -&gt; Github folder using the defaults. See Introduction to Git/Github tutorial for more help.\n\nOpen project in RStudio. In the upper right hand corner of RStudio, select ‘New Project’ in the drop-down menu to add a new R Project from an Existing Project. Browse to find the appropriate folder in Documents-&gt; Github. In the lower right section of RStudio, select ‘Files’ and you will see the README.md file, which appears on the home page on your Github repository site.\nModify the README.md file. Open this file and add text and possibly a link to this document. Save the file. If you are using the latest version of RStudio (with quarto), you can modify your file using the Source Code or the Visual Editor. This is an RMarkdown file, so you can use R markdown language, or, if you prefer, you can use the visual editor which is more user-friendly. If you copy/paste an existing document into the visual editor, much of the existing formatting will be retained.\nCommit & Push to Github. Open your project in Github Desktop; Github desktop will identify the changes you made (refresh if necessary). At the bottom left, describe the modifications you made to the document, and then select ‘commit’. Once the commit goes through– select ‘Push to Origin’ at the top. This will push changes to your Github repository.\nOpen your Github repository and check out the changes on your README at the bottom of the page!\nAdopt this process as your daily habit of working on your projects locally and saving your data to Github.\n\nFor more information, see:\nIntroduction to Git/Github Tutorial (Eli Holmes, NMFS)\nGit for Humans (Alice Bartlett)\nHappy Git with R (Jenny Bryan)"
  },
  {
    "objectID": "content/Getting-Started.html#getting-started-in-open-science",
    "href": "content/Getting-Started.html#getting-started-in-open-science",
    "title": "Getting Started",
    "section": "",
    "text": "Open Science is a movement to make scientific research (including publications, data, software) transparent and accessible so that knowledge is shared. Here we will provide steps to get started; in future sections we will provide additional details on specific tasks/projects\n\nEmbrace the Open Science Mindset! Learn more about this approach and why it matters at Openscapes.org and the Openscapes Approach Guide.\nAdd Software Tools\n\nGithub Desktop\nRStudio (v2022.07.2 build 576 or later)\nR\nCreate a Github Login\n\nCreate a Test Repository in Github (see help here)\nClone your Test Repository to your local computer using Github Desktop:\n\nFile -&gt; Clone Repository -&gt; URL\nCopy URL of your Test Repository on Github and save to your Documents -&gt; Github folder using the defaults. See Introduction to Git/Github tutorial for more help.\n\nOpen project in RStudio. In the upper right hand corner of RStudio, select ‘New Project’ in the drop-down menu to add a new R Project from an Existing Project. Browse to find the appropriate folder in Documents-&gt; Github. In the lower right section of RStudio, select ‘Files’ and you will see the README.md file, which appears on the home page on your Github repository site.\nModify the README.md file. Open this file and add text and possibly a link to this document. Save the file. If you are using the latest version of RStudio (with quarto), you can modify your file using the Source Code or the Visual Editor. This is an RMarkdown file, so you can use R markdown language, or, if you prefer, you can use the visual editor which is more user-friendly. If you copy/paste an existing document into the visual editor, much of the existing formatting will be retained.\nCommit & Push to Github. Open your project in Github Desktop; Github desktop will identify the changes you made (refresh if necessary). At the bottom left, describe the modifications you made to the document, and then select ‘commit’. Once the commit goes through– select ‘Push to Origin’ at the top. This will push changes to your Github repository.\nOpen your Github repository and check out the changes on your README at the bottom of the page!\nAdopt this process as your daily habit of working on your projects locally and saving your data to Github.\n\nFor more information, see:\nIntroduction to Git/Github Tutorial (Eli Holmes, NMFS)\nGit for Humans (Alice Bartlett)\nHappy Git with R (Jenny Bryan)"
  },
  {
    "objectID": "content/customizing.html",
    "href": "content/customizing.html",
    "title": "Customization",
    "section": "",
    "text": "Quarto allow many bells and whistles to make nice output. Read the documentation here Quarto documentation."
  },
  {
    "objectID": "content/customizing.html#quarto-documentation",
    "href": "content/customizing.html#quarto-documentation",
    "title": "Customization",
    "section": "",
    "text": "Quarto allow many bells and whistles to make nice output. Read the documentation here Quarto documentation."
  },
  {
    "objectID": "content/customizing.html#examples",
    "href": "content/customizing.html#examples",
    "title": "Customization",
    "section": "Examples",
    "text": "Examples\nLooking at other people’s Quarto code is a great way to figure out how to do stuff. Most will have a link to a GitHub repo where you can see the raw code. Look for a link to edit page or see source code. This will usually be on the right. Or look for the GitHub icon somewhere.\n\nQuarto gallery\nnmfs-openscapes\nFaye lab manual\nquarto-titlepages Note the link to edit is broken. Go to repo and look in documentation directory."
  },
  {
    "objectID": "content/prep/PAM-SI-Mtg-Prep-step2.html",
    "href": "content/prep/PAM-SI-Mtg-Prep-step2.html",
    "title": "2. Request to Join Repository",
    "section": "",
    "text": "Request to join the PAM-SI Meeting Repository\n\nGo to the PAM-SI Meeting Github Repository (https://github.com/SAEL-SWFSC/PAM-SI-Mtg-March2024)\nCreate an Issue to request to join the repository.\n\nSelect ⊙ Issue (issue button) at the upper left, below the repository name, and to the right of the &lt;&gt;Code button\nSelect New Issue (green button to right) - Title = “Add me to Repository”, and in the Description, give your name, email, and Github name.\nOn the right hand side, click on the gear icon next to Assignees and assign Shannon Rankin (shannonrankin), Kourtney Burger (Kourtney-Burger), and Rebecca Van Hoeck (rebecca-vanhoeck)\n\nClick on the gear icon next to Projects and select ‘PAM-SI-Mtg-March2024’\n\nClick ‘Submit New Issue’\nOn the right hand side under Projects set the Status to Todo\nI will add you to the repository as soon as I am able. Please ensure that you have your notifications set so that you will receive an email when you have been added, or when you are tagged in that repository.\n\nWhen you have been added to the repository, go to the next step",
    "crumbs": [
      "Pre Meeting Prep",
      "2. Request to Join Repository"
    ]
  },
  {
    "objectID": "content/prep/PAM-SI-Mtg-Prep-step3.html",
    "href": "content/prep/PAM-SI-Mtg-Prep-step3.html",
    "title": "3. Create Local Project",
    "section": "",
    "text": "Once you have been accepted as a member of the PAM-SI-Mtg-March2024 respository, clone to your local computer and create an RStudio project for local work.\n\nClone PAM-SI Meeting Repository to your local computer using Github Desktop:\n\nOpen Github Desktop on the computer you will be bringing to the workshop\nFile -&gt; Clone Repository -&gt; URL\nPaste in the URL for the PAM-SI Meeting Repo (https://github.com/SAEL-SWFSC/PAM-SI-Mtg-March2024). Save to your Documents -&gt; Github folder using the defaults. It is highly recommended that you save Github Repository/RStudio Projects to these default locations (and for these instructions, we assume you will!). See Introduction to Git/Github tutorial for more help.\n\nCreate/Open project in RStudio.\n\nOpen RStudio\nIn the upper right hand corner of RStudio, select ‘New Project’ in the drop-down menu\n\nAdd a new R Project from an Existing Directory. Browse to find the appropriate folder in Documents-&gt; Github. Note: Anytime you want to navigate to this project in RStudio, you can select it from the dropdown in this top right corner. If you want to use a new computer, you will need to repeat the steps of cloning the repository using Github Desktop, then creating a new project in RStudio.",
    "crumbs": [
      "Pre Meeting Prep",
      "3. Create Local Project"
    ]
  },
  {
    "objectID": "content/Presentations.html",
    "href": "content/Presentations.html",
    "title": "Presentations",
    "section": "",
    "text": "Presentations can be made in Quarto as three different slide formats including reveal.js (HTML), PowerPoint (MS Office), and Beamer (LaTeX/PDF)."
  },
  {
    "objectID": "content/Presentations.html#quarto-slides",
    "href": "content/Presentations.html#quarto-slides",
    "title": "Presentations",
    "section": "",
    "text": "Presentations can be made in Quarto as three different slide formats including reveal.js (HTML), PowerPoint (MS Office), and Beamer (LaTeX/PDF)."
  },
  {
    "objectID": "content/Presentations.html#html-slides-template",
    "href": "content/Presentations.html#html-slides-template",
    "title": "Presentations",
    "section": "HTML Slides Template",
    "text": "HTML Slides Template\nMethods Slides Template"
  },
  {
    "objectID": "content/rendering.html",
    "href": "content/rendering.html",
    "title": "Rendering",
    "section": "",
    "text": "The repo includes a GitHub Action that will render (build) the website automatically when you make changes to the files. It will be pushed to the gh-pages branch.\nBut when you are developing your content, you will want to render it locally."
  },
  {
    "objectID": "content/rendering.html#step-1.-make-sure-you-have-a-recent-rstudio",
    "href": "content/rendering.html#step-1.-make-sure-you-have-a-recent-rstudio",
    "title": "Rendering",
    "section": "Step 1. Make sure you have a recent RStudio",
    "text": "Step 1. Make sure you have a recent RStudio\nHave you updated RStudio since about August 2022? No? Then update to a newer version of RStudio. In general, you want to keep RStudio updated and it is required to have a recent version to use Quarto."
  },
  {
    "objectID": "content/rendering.html#step-2.-clone-and-create-rstudio-project",
    "href": "content/rendering.html#step-2.-clone-and-create-rstudio-project",
    "title": "Rendering",
    "section": "Step 2. Clone and create RStudio project",
    "text": "Step 2. Clone and create RStudio project\nFirst, clone the repo onto your local computer. How? You can click File &gt; New Project and then select “Version Control”. Paste in the url of the repository. That will clone the repo on to your local computer. When you make changes, you will need to push those up."
  },
  {
    "objectID": "content/rendering.html#step-3.-render-within-rstudio",
    "href": "content/rendering.html#step-3.-render-within-rstudio",
    "title": "Rendering",
    "section": "Step 3. Render within RStudio",
    "text": "Step 3. Render within RStudio\nRStudio will recognize that this is a Quarto project by the presence of the _quarto.yml file and will see the “Build” tab. Click the “Render website” button to render to the _site folder.\nPreviewing: You can either click index.html in the _site folder and specify “preview in browser” or set up RStudio to preview to the viewer panel. To do the latter, go to Tools &gt; Global Options &gt; R Markdown. Then select “Show output preview in: Viewer panel”."
  },
  {
    "objectID": "content/rmarkdown.html",
    "href": "content/rmarkdown.html",
    "title": "R Markdown",
    "section": "",
    "text": "You can include R Markdown files in your project."
  },
  {
    "objectID": "content/rmarkdown.html#r-markdown",
    "href": "content/rmarkdown.html#r-markdown",
    "title": "R Markdown",
    "section": "R Markdown",
    "text": "R Markdown\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\nsummary(cars)\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00"
  },
  {
    "objectID": "content/rmarkdown.html#including-plots",
    "href": "content/rmarkdown.html#including-plots",
    "title": "R Markdown",
    "section": "Including Plots",
    "text": "Including Plots\nYou can also embed plots, for example:\n\n\n\n\n\n\n\n\n\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot."
  },
  {
    "objectID": "content/PAM-SI-Mtg-Exercises.html",
    "href": "content/PAM-SI-Mtg-Exercises.html",
    "title": "Workshop Exercises",
    "section": "",
    "text": "We will create our Workshop Report using our meeting Github Repository (https://github.com/SAEL-SWFSC/PAM-SI-Mtg-March2024). By all working together, we can have the bulk of the report completed by the end of the workshop. Many hands make light work.\nExercise:\nWe will all work together on one small part of the report to fill in some of the information we know we will need. Assignments will be posted on the Google Doc. Find your assignment, and follow the instructions, below. Use the Google Doc for notes, and Github to work on your part of the Report.\n\nAdd Introduction Draft Text & Diagram\nAdd Authors\nAdd Acknowledgement Draft Text\nList of Attendees\nBibliography\nAcknowledgements\n508 Compliance\n\nAt end of exercise, make sure everyone pushes their information up to Github, then we will render the output and view results. How long did it take us to work on that? Continue throughout the workshop, having one or more people draft the paper– we may want google docs for notes during any given session, but then one person summarize these notes into Github, and then others can edit/revise.",
    "crumbs": [
      "Workshop Exercises",
      "Workshop Exercises"
    ]
  },
  {
    "objectID": "content/PAM-SI-Mtg-Exercises.html#github-collaboration",
    "href": "content/PAM-SI-Mtg-Exercises.html#github-collaboration",
    "title": "Workshop Exercises",
    "section": "",
    "text": "We will create our Workshop Report using our meeting Github Repository (https://github.com/SAEL-SWFSC/PAM-SI-Mtg-March2024). By all working together, we can have the bulk of the report completed by the end of the workshop. Many hands make light work.\nExercise:\nWe will all work together on one small part of the report to fill in some of the information we know we will need. Assignments will be posted on the Google Doc. Find your assignment, and follow the instructions, below. Use the Google Doc for notes, and Github to work on your part of the Report.\n\nAdd Introduction Draft Text & Diagram\nAdd Authors\nAdd Acknowledgement Draft Text\nList of Attendees\nBibliography\nAcknowledgements\n508 Compliance\n\nAt end of exercise, make sure everyone pushes their information up to Github, then we will render the output and view results. How long did it take us to work on that? Continue throughout the workshop, having one or more people draft the paper– we may want google docs for notes during any given session, but then one person summarize these notes into Github, and then others can edit/revise.",
    "crumbs": [
      "Workshop Exercises",
      "Workshop Exercises"
    ]
  },
  {
    "objectID": "content/GithubBook.html",
    "href": "content/GithubBook.html",
    "title": "Github Book",
    "section": "",
    "text": "You can create your own website that looks like a ‘book’ by copying an existing template in Github and editing it in RStudio.\n\nPrepare to do Great Things! Make sure you have gone through all the steps in the ‘Getting Started’ section of the Open Sciences chapter of this manual.\nCopy a template of Great Things!\nCopy an existing template to your own Github account. Go to NOAA Quarto Template and copy template to your Github Repository following the directions on the README.md. Give it an appropriate name and make sure it is PUBLIC.\nCopy to your desktop to make it a Greater Thing!\nUsing Github Desktop, Clone repository using URL (File-&gt; Clone Repository). Copy the URL of your repository site (the URL of your copy of the Great Things Repository on your github account), and save project to your Documents-&gt; Github folder (use defaults). See this Introduction to Git/Github tutorial for more help.\nUse RStudio to Modify Great Thing to make it Greater!\nIn RStudio, in the top right corner, select the project dropdown to Add New R Project from an Existing Project– and browse to select the appropriate folder in Documents-&gt; Github. Examine the documents:\n\nREADME.md\nThis is the README file that will appear on your repository page.\nindex.qmd\nThis will serve as your ‘home’ page for the web-book that is created\ncontents folder\nThis folder will contain the ‘pages’ (chapters) for your web-book\n_quarto.yml\nThis will define the layout of your web-book\n(Insert picture of Layout)\n\nModify README.md\nIf you are using the latest version of RStudio (with quarto), you can modify your file using the Source Code or the Visual Editor. This is an RMarkdown file, so you can use R markdown language, or, if you prefer, you can use the visual editor which is more user-friendly. If you copy/paste an existing document into the visual editor, much of the existing formatting will be retained.\nModify and Rename files in Contents Folder\nEach of the existing qmd (Quarto) files in the contents folder have additional instructions to help you format your ‘book’ in Quarto. You may want to keep them, or you can always review the original template web-page for this information. Read the ‘Add Content’ page here to understand the minimal information you need for each of these pages in your contents folder.\nFor each page in your website (or chapter in your book), you will want to have a qmd file in this folder. You can open one of the existing qmd files and File-&gt; Save As and save it as another name. Retain the minimal information needed for your page (see the Add Contents page), and then add your content using either the source code or visual editor. Make sure you SAVE each file when you are finished!\nModify _quarto.yml file\nThe _quarto.yml file identifies the structure of the web-book. Make changes to the website (Title, site & repo URL), the Sidebar (link to your preferred logo, link the globe icon to your website and link the github icon to your github URL and rename both of these). Finally– you will want to identify the contents.\nThe contents are each of your chapters (or web- pages). Each chapter has two lines of information:\n\nhref: refers to the name of the relevant qmd file (located in the contents folder).\ntext: this is the text you will see on the sidebar of the web-book.\nThe first contents page (home page) will link to the index.qmd file (in the main folder). The others will be in the contents folder, and therefore their name should be ‘contents/filename.qmd’ (where filename is the name of that qmd file).\n\nRender & View the Web-book\nYou may want to render and view the web-book locally to be sure it is great.\nTo Render the document, open the index.qmd file (in the main folder) and click on the ‘Render’ icon near the top (to the right of the save button). Look in the Terminal (lower left section of RStudio) for any errors. Most errors may be due to typos or unsaved modifications. If you still have errors, save everything & reopen RStudio & run again. If you still have errors, go through file by file!\nTo view the rendered document, open the _site folder, click on the index.html and select ‘View in Web Browser’. Ensure that everything looks as you would expect. You may need to modify, render, view, repeat until it is good. Be sure your project is saved.\nCommit & Push to Github\nOpen Github Desktop and open your project (if it is not already opened). Github desktop will identify the changes you made. At the bottom left, describe the modifications you made to the document, and then select ‘commit’. Once the commit goes through– select ‘Push to Origin’ at the top. This will push changes to your Github repository.\nOpen your Github repository and check out your Great Things!"
  },
  {
    "objectID": "content/GithubBook.html#github-book",
    "href": "content/GithubBook.html#github-book",
    "title": "Github Book",
    "section": "",
    "text": "You can create your own website that looks like a ‘book’ by copying an existing template in Github and editing it in RStudio.\n\nPrepare to do Great Things! Make sure you have gone through all the steps in the ‘Getting Started’ section of the Open Sciences chapter of this manual.\nCopy a template of Great Things!\nCopy an existing template to your own Github account. Go to NOAA Quarto Template and copy template to your Github Repository following the directions on the README.md. Give it an appropriate name and make sure it is PUBLIC.\nCopy to your desktop to make it a Greater Thing!\nUsing Github Desktop, Clone repository using URL (File-&gt; Clone Repository). Copy the URL of your repository site (the URL of your copy of the Great Things Repository on your github account), and save project to your Documents-&gt; Github folder (use defaults). See this Introduction to Git/Github tutorial for more help.\nUse RStudio to Modify Great Thing to make it Greater!\nIn RStudio, in the top right corner, select the project dropdown to Add New R Project from an Existing Project– and browse to select the appropriate folder in Documents-&gt; Github. Examine the documents:\n\nREADME.md\nThis is the README file that will appear on your repository page.\nindex.qmd\nThis will serve as your ‘home’ page for the web-book that is created\ncontents folder\nThis folder will contain the ‘pages’ (chapters) for your web-book\n_quarto.yml\nThis will define the layout of your web-book\n(Insert picture of Layout)\n\nModify README.md\nIf you are using the latest version of RStudio (with quarto), you can modify your file using the Source Code or the Visual Editor. This is an RMarkdown file, so you can use R markdown language, or, if you prefer, you can use the visual editor which is more user-friendly. If you copy/paste an existing document into the visual editor, much of the existing formatting will be retained.\nModify and Rename files in Contents Folder\nEach of the existing qmd (Quarto) files in the contents folder have additional instructions to help you format your ‘book’ in Quarto. You may want to keep them, or you can always review the original template web-page for this information. Read the ‘Add Content’ page here to understand the minimal information you need for each of these pages in your contents folder.\nFor each page in your website (or chapter in your book), you will want to have a qmd file in this folder. You can open one of the existing qmd files and File-&gt; Save As and save it as another name. Retain the minimal information needed for your page (see the Add Contents page), and then add your content using either the source code or visual editor. Make sure you SAVE each file when you are finished!\nModify _quarto.yml file\nThe _quarto.yml file identifies the structure of the web-book. Make changes to the website (Title, site & repo URL), the Sidebar (link to your preferred logo, link the globe icon to your website and link the github icon to your github URL and rename both of these). Finally– you will want to identify the contents.\nThe contents are each of your chapters (or web- pages). Each chapter has two lines of information:\n\nhref: refers to the name of the relevant qmd file (located in the contents folder).\ntext: this is the text you will see on the sidebar of the web-book.\nThe first contents page (home page) will link to the index.qmd file (in the main folder). The others will be in the contents folder, and therefore their name should be ‘contents/filename.qmd’ (where filename is the name of that qmd file).\n\nRender & View the Web-book\nYou may want to render and view the web-book locally to be sure it is great.\nTo Render the document, open the index.qmd file (in the main folder) and click on the ‘Render’ icon near the top (to the right of the save button). Look in the Terminal (lower left section of RStudio) for any errors. Most errors may be due to typos or unsaved modifications. If you still have errors, save everything & reopen RStudio & run again. If you still have errors, go through file by file!\nTo view the rendered document, open the _site folder, click on the index.html and select ‘View in Web Browser’. Ensure that everything looks as you would expect. You may need to modify, render, view, repeat until it is good. Be sure your project is saved.\nCommit & Push to Github\nOpen Github Desktop and open your project (if it is not already opened). Github desktop will identify the changes you made. At the bottom left, describe the modifications you made to the document, and then select ‘commit’. Once the commit goes through– select ‘Push to Origin’ at the top. This will push changes to your Github repository.\nOpen your Github repository and check out your Great Things!"
  },
  {
    "objectID": "content/exercises/PAM-SI-Mtg-Exercises-Authors.html",
    "href": "content/exercises/PAM-SI-Mtg-Exercises-Authors.html",
    "title": "Add Authors",
    "section": "",
    "text": "Exercise: Add preliminary authors to the report document.\n\nBefore you start…. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nFind list of Authors\n\nNavigate to 📁info folder and Open PAM SI Proposal Revised Sept 18, 2023.docx\nThe list of Primary authors is at the top of this document.\n\n\n\nAdd Authors to yaml\n\nNavigate to root directory (PAM-SI-Mtg-March2024 folder)\nOpen _quarto.yaml file\nAdd Authors\n\nscroll down to section with ‘author:’ and look at the formatting. YAML files are extremely picky about formatting, including exact spacing of elements. It is best to copy a complete section and paste so that all indentations are exact. Do NOT use tab (only spaces) to move items.\nAdd Authors. For each author, do the following:\n\nAdd name (First Last, as in example on yaml)\nAdd email (lookup or ask them)\nAdd Affiliation info (lookup or ask them).\n\nCheck yaml formatting\n\nOpen an online yaml checker (yamlchecker.com or onlineyamltools.com)\nCopy/paste the yaml you wrote into the checker\nIdentify/Address any errors\nRepeat until yaml checker does not return any errors.\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‘PAM-SI-Mtg-March2024’ repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‘commit’. For example, you may want to write “Add Authors” and in details, state “Added authors and affiliations into the _quarto.yml”.\nOnce the commit goes through– select ‘Push to Origin’ at the top. This will push changes to your Github repository.\n\nOpen associated Github Issue here, and make sure you’ve completed all tasks",
    "crumbs": [
      "Workshop Exercises",
      "Add Authors"
    ]
  },
  {
    "objectID": "content/exercises/PAM-SI-Mtg-Exercises-References.html",
    "href": "content/exercises/PAM-SI-Mtg-Exercises-References.html",
    "title": "References",
    "section": "",
    "text": "Exercise: Create a bibliography for the Report based on the shared group Zotero bibliography.\nZotero is an open-source online reference manager, where references can be readily saved from Google scholar using a browser plugin.\n\nBefore you start…. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nShortcut for PAM-SI Meeting\nGet started:\n\nLoad Zotero and create a login.\nJoin the NMFS-PAM Group\n\nFind your favorite publication and add it to the NMFS-PAM library\n\nCreate a browser plugin so that you can directly save google scholar citations to your online reference list.\nAdd via Google Scholar\n\nFind article on Google Scholar, click on double quotes at bottom of citation\nSelect ‘RefMan’ and OK to save to Zotero\nAdd citation to the NMFS-PAM group\n\n\nUpdate Bibliography for Meeting Report\n\nOpen Zotero on your desktop, export library, replace the existing bibliography in the local folder\nUsing Github Desktop, push changes back to Github\n\nInsert Citation into text\n\nFind the appropriate document in the Repository, find the location within the document where you want to add the citation\nStart by writing @ symbol, which should pull up a list of bibliographic references. Search for yours, and select it.\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‘PAM-SI-Mtg-March2024’ repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‘commit’. For example, you may want to write “Add Intro” and in details, state “Added draft introduction text and diagram based on PAM-SI Vision and Proposal”.\nOnce the commit goes through– select ‘Push to Origin’ at the top. This will push changes to your Github repository.\n\nOpen associated Github Issue here, and make sure you’ve completed all tasks",
    "crumbs": [
      "Workshop Exercises",
      "References"
    ]
  },
  {
    "objectID": "content/exercises/PAM-SI-Mtg-Exercises-IntroText.html",
    "href": "content/exercises/PAM-SI-Mtg-Exercises-IntroText.html",
    "title": "Intro Text",
    "section": "",
    "text": "Exercise: Insert preliminary text for the Report Introduction based on the PAM-SI Proposal.\n\nBefore you start…. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nCreate and edit intro file\n\nOpen PAM-SI-Mtg-March2024 project in RStudio\nIn lower right hand corner, select ‘Files’ tab\nClick on the 📁text folder to open\nCreate a new quarto Document\n\nIn ‘Files’ tab, select New Blank File -&gt; Quarto Doc, Name “Intro.qmd”\nOpen Intro.qmd and view using the Visual Editor\n\nAdd text to Intro.qmd\n\nNavigate to 📁info folder and Open PAM SI Proposal Revised Sept 18, 2023.docx and PAM SI Vision Statement.docx\nCopy the ‘Background’ paragraph from the PAM SI Vision Statement.docx and paste into the Intro.qmd\nCopy the 2nd sentence from ‘Project Tasks & Key Activities’ from the PAM SI Proposal Revised Sept 18, 2023.docx and paste as 2nd paragraph in Intro.qmd.\n\nFormat Intro.qmd\n\nPlace cursor at top of Intro.qmd page, and navigate to Visual Editor tool bar. Using the drop-down menu, change ‘Normal’ to ‘Header 1’.\nType ‘Introduction’ at top of page.\nInsert Picture below text by clicking on the picture icon on the toolbar.\n\nNavigate to the ‘images’ folder in the repository and select ‘Proposal-Intro-Fig.jpg’. Provide the following caption: “Key Activities Identified by the Passive Acoustic Monitoring Strategic Initiative”, and under ‘Attributes’ ID section, put ‘Intro-diagram’.\n\n\nLink Intro.qmd to Report\n\nOpen the _quarto.yaml in the root directory and scroll down to the ‘chapters’. Here you’ll see a list of documents in the content folder that are serving as pages for the Report. Yaml documents are very fussy about specific formatting.\nPut the cursor after the index.qmd and hit ‘enter’ (this will increase the chances that your entry is properly aligned).\nIn this position, write ‘- text/Intro.qmd’ (be sure there is only one space between the - and the word ‘content’)\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‘PAM-SI-Mtg-March2024’ repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‘commit’. For example, you may want to write “Add Intro” and in details, state “Added draft introduction text and diagram based on PAM-SI Vision and Proposal”.\nOnce the commit goes through– select ‘Push to Origin’ at the top. This will push changes to your Github repository.\n\nOpen associated Github Issue here, and make sure you’ve completed all tasks",
    "crumbs": [
      "Workshop Exercises",
      "Intro Text"
    ]
  },
  {
    "objectID": "content/Writing-Guide.html",
    "href": "content/Writing-Guide.html",
    "title": "Writing Guide",
    "section": "",
    "text": "The purpose of this guide is to provide an approach to writing that parallels the path of your research to improve efficiency and allow for reproducible research.\n\nCreate a Github Repository for your research\n\nCreate Repository\nUse Github Desktop to clone to your local computer (store in Documents-&gt;Github)\nOpen project in RStudio (version 2022.07.2 build576 or later)\n\nCreate a draft manuscript using a preferred template in RStudio [This section is in progress-I am currently getting errors!]. Use the appropriate journal template (see here for more info); I will use elsevier for this example.\n\nRStudio –&gt; Terminal (bottom left)\nquarto use template quarto-journals/elsevier\nThis will install the extension and create an example qmd file and bibliography that you can use as a starting place for your paper.\nIn yaml at the top of the document, change the format according to the journal article template you wish to use.\n\n\nFor example:\n---\ntitle: \"My Awesome Paper\"\nauthor: \"Me\"\nformat: \n  pdf: default\n  elsevier-pdf:\n    keep-tex: true\n\neditor: visual\n---\nAs you work on your research, document relevant information in this manuscript (which can later be turned into a report, publication, thesis, etc). If for some reason you drop the project for a few years (ahem!), then you can return to this document to see where you left off.\n\nIntroduction: As you review literature, add relevant information to the appropriate paragraph in your introduction, and add citation to References. From the beginning, write in your own works (they need to be clear, but not necessarily well written yet!). If you copy words verbatim, then put in quotes and provide link to reference to be sure you know these are not your own words. The goal is to start putting down relevant information as you come across it– not to write pretty. You can clean up/edit at a later stage.\nReferences: Use Zotero for references (more later!). As you come across literature, put your references in Zotero and cite in your manuscript.\nMethods (Draft): For your initial draft manuscript, explicitly input your entire methods (in excruciating detail!) for future reference. Keep track of changes (and reasons for changes) using Issues in Github. Note to Self: We may want to create a separate RMarkdown for super-detailed methods (with version control?), and then cherry pick from this for our final paper methods.\nResults: Remember, results are just the facts!\nDiscussion: If results are the facts, the discussion can provide more information as to the WHY behind your results (and context!). There is (mostly) a strict demarcation between the two sections. Discussion is where the juicy bits go.\nAcknowledgements: As your research progresses, be sure to add people, funders, etc to your acknowledgements.\n\nThings to remember as you write:\n\nWriting is hard. Do not try to write the perfect words– instead, get the information down. It is much easier to write ideas and then edit them later to make them sound smart than it is to write it all down perfectly the first time.\nIdentify Co-authors: This can be tricky. Everyone approaches this a little differently, but these guidelines can serve as a reasonably standard approach. Discuss early on with your team and as you work with others on your project. If you use guidelines to make your co-author decisions, then this can help alleviate sticky situations related to co-authorship.\nBe consistent in EVERYTHING, including your approach to topics in the Intro/Methods/Results/Discussion.\nDo not use subheadings for each paragraph. If you use subheadings, make sure they are consistent across sections (methods, results, and possibly discussion).\nFollow the rules! (Authors guidelines for your journal)\nGet Help! Do not wait for the final draft before you share with others. Get help early on to minimize time wasted in re-doing work.\n\nFor additional information:\nWriting Science: What makes scientific writing hard and how to make it easier (Kathleen Grogan). https://doi.org/10.1002/bes2.1800\nDefining the Role of Authors and Contributors (ICMJE). Link here.\nA guide to getting published in Ecology and Evolution (BES). Link here.\nVideo Tutorial: Beautiful reports and presentations with Quarto (RStudio). Link here."
  },
  {
    "objectID": "content/Writing-Guide.html#writing-guide",
    "href": "content/Writing-Guide.html#writing-guide",
    "title": "Writing Guide",
    "section": "",
    "text": "The purpose of this guide is to provide an approach to writing that parallels the path of your research to improve efficiency and allow for reproducible research.\n\nCreate a Github Repository for your research\n\nCreate Repository\nUse Github Desktop to clone to your local computer (store in Documents-&gt;Github)\nOpen project in RStudio (version 2022.07.2 build576 or later)\n\nCreate a draft manuscript using a preferred template in RStudio [This section is in progress-I am currently getting errors!]. Use the appropriate journal template (see here for more info); I will use elsevier for this example.\n\nRStudio –&gt; Terminal (bottom left)\nquarto use template quarto-journals/elsevier\nThis will install the extension and create an example qmd file and bibliography that you can use as a starting place for your paper.\nIn yaml at the top of the document, change the format according to the journal article template you wish to use.\n\n\nFor example:\n---\ntitle: \"My Awesome Paper\"\nauthor: \"Me\"\nformat: \n  pdf: default\n  elsevier-pdf:\n    keep-tex: true\n\neditor: visual\n---\nAs you work on your research, document relevant information in this manuscript (which can later be turned into a report, publication, thesis, etc). If for some reason you drop the project for a few years (ahem!), then you can return to this document to see where you left off.\n\nIntroduction: As you review literature, add relevant information to the appropriate paragraph in your introduction, and add citation to References. From the beginning, write in your own works (they need to be clear, but not necessarily well written yet!). If you copy words verbatim, then put in quotes and provide link to reference to be sure you know these are not your own words. The goal is to start putting down relevant information as you come across it– not to write pretty. You can clean up/edit at a later stage.\nReferences: Use Zotero for references (more later!). As you come across literature, put your references in Zotero and cite in your manuscript.\nMethods (Draft): For your initial draft manuscript, explicitly input your entire methods (in excruciating detail!) for future reference. Keep track of changes (and reasons for changes) using Issues in Github. Note to Self: We may want to create a separate RMarkdown for super-detailed methods (with version control?), and then cherry pick from this for our final paper methods.\nResults: Remember, results are just the facts!\nDiscussion: If results are the facts, the discussion can provide more information as to the WHY behind your results (and context!). There is (mostly) a strict demarcation between the two sections. Discussion is where the juicy bits go.\nAcknowledgements: As your research progresses, be sure to add people, funders, etc to your acknowledgements.\n\nThings to remember as you write:\n\nWriting is hard. Do not try to write the perfect words– instead, get the information down. It is much easier to write ideas and then edit them later to make them sound smart than it is to write it all down perfectly the first time.\nIdentify Co-authors: This can be tricky. Everyone approaches this a little differently, but these guidelines can serve as a reasonably standard approach. Discuss early on with your team and as you work with others on your project. If you use guidelines to make your co-author decisions, then this can help alleviate sticky situations related to co-authorship.\nBe consistent in EVERYTHING, including your approach to topics in the Intro/Methods/Results/Discussion.\nDo not use subheadings for each paragraph. If you use subheadings, make sure they are consistent across sections (methods, results, and possibly discussion).\nFollow the rules! (Authors guidelines for your journal)\nGet Help! Do not wait for the final draft before you share with others. Get help early on to minimize time wasted in re-doing work.\n\nFor additional information:\nWriting Science: What makes scientific writing hard and how to make it easier (Kathleen Grogan). https://doi.org/10.1002/bes2.1800\nDefining the Role of Authors and Contributors (ICMJE). Link here.\nA guide to getting published in Ecology and Evolution (BES). Link here.\nVideo Tutorial: Beautiful reports and presentations with Quarto (RStudio). Link here."
  },
  {
    "objectID": "content/Research-Guide.html",
    "href": "content/Research-Guide.html",
    "title": "Research Guide",
    "section": "",
    "text": "The purpose of this guide is to provide an approach to working on a research project that provides an efficient approach to collaborating with yourself (including your future self!) and other researchers. This guide follows our lab philosophy of Open and Reproducible Science.\n\nCreate a Github Repository for your research\n\nCreate Repository\nUse Github Desktop to clone to your local computer (store in Documents-&gt;Github)\nOpen project in RStudio (version 2022.07.2 build576 or later)\n\nCreate a draft manuscript to document your research (see Writing Guide in this lab manual).\nBe sure to document all changes to your research using the ‘commit’ documentation. Be detailed. Consider doing smaller changes/commits to keep track of things.\nCreate a project board in Github to identify tasks in your project (to do, doing, done!). Retain these for future review.\nUse Issues to document discussions, modifications, and workflow. Link Issues to tasks in your Project Board.\nWhen you reach milestones in your work (say a draft for author review), create a Version in Github. This will help future you go back in time to a previous version of your work.\n\nThings to remember as you work:\n\nDocument everything! Assume you are documenting every detail for someone who is absolutely new to your work and needs to follow your methods exactly. Your future self will thank you!\n\nFor additional information:\nVideo Tutorial: Beautiful reports and presentations with Quarto (RStudio). Link here."
  },
  {
    "objectID": "content/Research-Guide.html#research-guide",
    "href": "content/Research-Guide.html#research-guide",
    "title": "Research Guide",
    "section": "",
    "text": "The purpose of this guide is to provide an approach to working on a research project that provides an efficient approach to collaborating with yourself (including your future self!) and other researchers. This guide follows our lab philosophy of Open and Reproducible Science.\n\nCreate a Github Repository for your research\n\nCreate Repository\nUse Github Desktop to clone to your local computer (store in Documents-&gt;Github)\nOpen project in RStudio (version 2022.07.2 build576 or later)\n\nCreate a draft manuscript to document your research (see Writing Guide in this lab manual).\nBe sure to document all changes to your research using the ‘commit’ documentation. Be detailed. Consider doing smaller changes/commits to keep track of things.\nCreate a project board in Github to identify tasks in your project (to do, doing, done!). Retain these for future review.\nUse Issues to document discussions, modifications, and workflow. Link Issues to tasks in your Project Board.\nWhen you reach milestones in your work (say a draft for author review), create a Version in Github. This will help future you go back in time to a previous version of your work.\n\nThings to remember as you work:\n\nDocument everything! Assume you are documenting every detail for someone who is absolutely new to your work and needs to follow your methods exactly. Your future self will thank you!\n\nFor additional information:\nVideo Tutorial: Beautiful reports and presentations with Quarto (RStudio). Link here."
  },
  {
    "objectID": "content/Zotero.html",
    "href": "content/Zotero.html",
    "title": "Zotero",
    "section": "",
    "text": "Zotero is an open-source online reference manager, where references can be readily saved from Google scholar using a browser plugin.\n\n\nGet started:\n\nLoad Zotero and create a login.\nJoin the NMFS-PAM Group\n\nFind your favorite publication and add it to the NMFS-PAM library\n\nCreate a browser plugin so that you can directly save google scholar citations to your online reference list.\nAdd via Google Scholar\n\nFind article on Google Scholar, click on double quotes at bottom of citation\nSelect ‘RefMan’ and OK to save to Zotero\nAdd citation to the NMFS-PAM group\n\n\nUpdate Bibliography for Meeting Report\n\nIn Zotero, export library, replace the existing bibliography in the local folder\nUsing Github Desktop, push changes back to Github\n\nInsert Citation into text\n\nFind the appropriate document in the Repository, find the location within the document where you want to add the citation\nStart by writing @ symbol, which should pull up a list of bibliographic references. Search for yours, and select it.\nUsing Github Desktop, push changes back to Github.\n\n\n\n\n\nAdd to your Document:\n\nUse Zotero to download the csl file for the journal you want to use.\n\nGo to the Zotero Preferences menu (Zotero &gt; Preferences on Mac, Edit &gt; Preferences on PC).\nClick on the Cite menu. …\nBelow the list of pre-installed styles, click the link for Get additional styles…\nSearch for your desired style in the provided search field.\nSelect the style you want to install.\n\nCSL: Citation Style Language\n\nUse Zotero to download the csl file for the journal you want to use.\n\nGo to the Zotero Preferences menu (Zotero &gt; Preferences on Mac, Edit &gt; Preferences on PC).\nClick on the Cite menu. …\nBelow the list of pre-installed styles, click the link for Get additional styles…\nSearch for your desired style in the provided search field.\nSelect the style you want to install.\n\nAdd csl to your yaml\n— title: “My Document” bibliography: references.bib csl: nature.csl —\n\nAdd your references into the document\n\nInline Citation: Citations are inserted into your document using square brackets and are separated by semicolons. Each citation must have a key, composed of an ‘@’ symbol plus the citation identifier from the database. For example, [@wickham2015]\nBibliography: A list of works cited will be automatically generated and placed in the document if the style calls for it. You may insert divs such as this:\n### References\n\n\n\nFor more information, see Quarto Guide",
    "crumbs": [
      "Working with Zotero"
    ]
  },
  {
    "objectID": "content/Zotero.html#zotero",
    "href": "content/Zotero.html#zotero",
    "title": "Zotero",
    "section": "",
    "text": "Zotero is an open-source online reference manager, where references can be readily saved from Google scholar using a browser plugin.\n\n\nGet started:\n\nLoad Zotero and create a login.\nJoin the NMFS-PAM Group\n\nFind your favorite publication and add it to the NMFS-PAM library\n\nCreate a browser plugin so that you can directly save google scholar citations to your online reference list.\nAdd via Google Scholar\n\nFind article on Google Scholar, click on double quotes at bottom of citation\nSelect ‘RefMan’ and OK to save to Zotero\nAdd citation to the NMFS-PAM group\n\n\nUpdate Bibliography for Meeting Report\n\nIn Zotero, export library, replace the existing bibliography in the local folder\nUsing Github Desktop, push changes back to Github\n\nInsert Citation into text\n\nFind the appropriate document in the Repository, find the location within the document where you want to add the citation\nStart by writing @ symbol, which should pull up a list of bibliographic references. Search for yours, and select it.\nUsing Github Desktop, push changes back to Github.\n\n\n\n\n\nAdd to your Document:\n\nUse Zotero to download the csl file for the journal you want to use.\n\nGo to the Zotero Preferences menu (Zotero &gt; Preferences on Mac, Edit &gt; Preferences on PC).\nClick on the Cite menu. …\nBelow the list of pre-installed styles, click the link for Get additional styles…\nSearch for your desired style in the provided search field.\nSelect the style you want to install.\n\nCSL: Citation Style Language\n\nUse Zotero to download the csl file for the journal you want to use.\n\nGo to the Zotero Preferences menu (Zotero &gt; Preferences on Mac, Edit &gt; Preferences on PC).\nClick on the Cite menu. …\nBelow the list of pre-installed styles, click the link for Get additional styles…\nSearch for your desired style in the provided search field.\nSelect the style you want to install.\n\nAdd csl to your yaml\n— title: “My Document” bibliography: references.bib csl: nature.csl —\n\nAdd your references into the document\n\nInline Citation: Citations are inserted into your document using square brackets and are separated by semicolons. Each citation must have a key, composed of an ‘@’ symbol plus the citation identifier from the database. For example, [@wickham2015]\nBibliography: A list of works cited will be automatically generated and placed in the document if the style calls for it. You may insert divs such as this:\n### References\n\n\n\nFor more information, see Quarto Guide",
    "crumbs": [
      "Working with Zotero"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Open Science for NOAA Fisheries PAM",
    "section": "",
    "text": "Open Science is a movement to make scientific research (including publications, data, software) transparent and accessible so that knowledge is shared. This repository provides resources to help NOAA Fisheries Passive Acoustic Monitoring groups adopt an Open Science approach to their research.\nDuring the NOAA Fisheries PAM Strategic Meeting, we will work together using Open Science Methods. To prepare for a successful meeting, we request that you complete all “Pre Meeting Prep” Tasks prior to the meeting.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#pre-meeting-tasks",
    "href": "index.html#pre-meeting-tasks",
    "title": "Open Science for NOAA Fisheries PAM",
    "section": "Pre Meeting Tasks",
    "text": "Pre Meeting Tasks\nThese tasks must be completed prior to the meeting to ensure you are able to participate fully.\nTo Start:\n\nClick on the Pre Meeting Prep dropdown menu on the left Menu Bar.\n\n\n\nTasks 1 and 2 can be completed first.\n\nTask 1 LOAD Software- Please load software onto the computer that you will be bringing with you to the meeting! See left menu for more info.\nTask 2 Create a Github Account and request permission to join our Meeting Repository. See left menu for more info.\n\nTasks 3 and 4 can be completed once you have permission. See left menu for more info.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#if-you-need-help",
    "href": "index.html#if-you-need-help",
    "title": "Open Science for NOAA Fisheries PAM",
    "section": "IF YOU NEED HELP",
    "text": "IF YOU NEED HELP\nSubmit an Issue on THIS repository requesting help:\n\nGo to https://github.com/SAEL-SWFSC/OpenScience\nAt top Menu Bar, click on ⊙ Issues\nAt right, click on green NEW ISSUES button\nGive a descriptive title, and add a description of the specific help you need. At the right, under Assignees, choose all three:\n\nshannonrankin\nrebecca-vanhoeck\nKourtney-Burger\n\nOne of us will help you as soon as we can!",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "content/code.html",
    "href": "content/code.html",
    "title": "Rendering with Code",
    "section": "",
    "text": "You can have code (R, Python or Julia) in your qmd file. You will need to have these installed on your local computer, but presumably you do already if you are adding code to your qmd files.\nx &lt;- c(5, 15, 25, 35, 45, 55)\ny &lt;- c(5, 20, 14, 32, 22, 38)\nlm(x ~ y)\n\n\nCall:\nlm(formula = x ~ y)\n\nCoefficients:\n(Intercept)            y  \n      1.056        1.326"
  },
  {
    "objectID": "content/code.html#modify-the-github-action",
    "href": "content/code.html#modify-the-github-action",
    "title": "Rendering with Code",
    "section": "Modify the GitHub Action",
    "text": "Modify the GitHub Action\nYou will need to change the GitHub Action in .github/workflows to install these and any needed packages in order for GitHub to be able to render your webpage. The GitHub Action install R since I used that in code.qmd. If you use Python or Julia instead, then you will need to update the GitHub Action to install those.\nIf getting the GitHub Action to work is too much hassle (and that definitely happens), you can alway render locally and publish to the gh-pages branch. If you do this, make sure to delete or rename the GitHub Action to something like\nrender-and-publish.old_yml\nso GitHub does not keep trying to run it. Nothing bad will happen if you don’t do this, but if you are not using the action (because it keeps failing), then you don’t need GitHub to run it."
  },
  {
    "objectID": "content/code.html#render-locally-and-publish-to-gh-pages-branch",
    "href": "content/code.html#render-locally-and-publish-to-gh-pages-branch",
    "title": "Rendering with Code",
    "section": "Render locally and publish to gh-pages branch",
    "text": "Render locally and publish to gh-pages branch\nTo render locally and push up to the gh-pages branch, open a terminal window and then cd to the directory with the Quarto project. Type this in the terminal:\nquarto render gh-pages"
  },
  {
    "objectID": "content/publishing.html",
    "href": "content/publishing.html",
    "title": "Publishing",
    "section": "",
    "text": "To get your Quarto webpage to show up with the url\nyou have a few steps."
  },
  {
    "objectID": "content/publishing.html#turn-on-github-pages-for-your-repo",
    "href": "content/publishing.html#turn-on-github-pages-for-your-repo",
    "title": "Publishing",
    "section": "Turn on GitHub Pages for your repo",
    "text": "Turn on GitHub Pages for your repo\n\nTurn on GitHub Pages under Settings &gt; Pages . You will set pages to be made from the gh-pages branch and the root directory.\nTurn on GitHub Actions under Settings &gt; Actions &gt; General\n\nThe GitHub Action will automatically recreate your website when you push to GitHub after you do the initial gh-pages set-up"
  },
  {
    "objectID": "content/publishing.html#do-your-first-publish-to-gh-pages",
    "href": "content/publishing.html#do-your-first-publish-to-gh-pages",
    "title": "Publishing",
    "section": "Do your first publish to gh-pages",
    "text": "Do your first publish to gh-pages\nThe first time you publish to gh-pages, you need to do so locally.\n\nOn your local computer, open a terminal window and cd to your repo directory. Here is what that cd command looks like for me. You command will look different because your local repo will be somewhere else on your computer.\n\ncd ~/Documents/GitHub/NOAA-quarto-simple\n\nPublish to the gh-pages. In the terminal type\n\nquarto publish gh-pages\nThis is going to render your webpage and then push the _site contents to the gh-pages branch."
  },
  {
    "objectID": "content/publishing.html#dont-like-using-gh-pages",
    "href": "content/publishing.html#dont-like-using-gh-pages",
    "title": "Publishing",
    "section": "Don’t like using gh-pages?",
    "text": "Don’t like using gh-pages?\nIn some cases, you don’t want your website on the gh-pages branch. For example, if you are creating releases and you want the website pages archived in that release, then you won’t want your website pages on the gh-pages branch.\nHere are the changes you need to make if you to avoid gh-pages branch.\n\nAt the top of _quarto.yml add the following:\n\nproject: \n  type: website\n  output-dir: docs\n\nOn GitHub under Settings &gt; Pages set pages to be made from the main branch and the docs directory.\nMake sure docs is not listed in .gitignore\nPublish the site the first time locally using quarto publish from the terminal\nChange the GitHub Action because you can’t use quarto publish gh-pages. You’ll need to push to the main branch yourself (in the GitHub Action)\n\non:\n  push:\n    branches: main\n\nname: Render and Publish\n\njobs:\n  build-deploy:\n    runs-on: ubuntu-latest\n    env:\n      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}\n\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v2 \n        \n      - name: Set up R (needed for Rmd)\n        uses: r-lib/actions/setup-r@v2\n\n      - name: Install packages (needed for Rmd)\n        run: Rscript -e 'install.packages(c(\"rmarkdown\", \"knitr\", \"jsonlite\"))'\n\n      - name: Set up Quarto\n        uses: quarto-dev/quarto-actions/setup@v2\n        with:\n          # To install LaTeX to build PDF book \n          # tinytex: true \n          # uncomment below and fill to pin a version\n          # version: 0.9.600\n      \n      - name: Render Quarto Project\n        uses: quarto-dev/quarto-actions/render@v2\n        with:\n          to: html\n\n      - name: Set up Git\n        run: |\n          git config --local user.email \"actions@github.com\"\n          git config --local user.name \"GitHub Actions\"\n\n      - name: Commit all changes and push\n        run: |\n          git add -A && git commit -m 'Build site' || echo \"No changes to commit\"\n          git push origin || echo \"No changes to commit\""
  },
  {
    "objectID": "content/exercises/PAM-SI-Mtg-MeetingNotes.html",
    "href": "content/exercises/PAM-SI-Mtg-MeetingNotes.html",
    "title": "Meeting Notes",
    "section": "",
    "text": "We will work as a team to work on meeting notes using Google Docs (google docs is easier for synchronous collaboration!).\nAfter the meeting, the final meeting notes will be saved in the PAM-SI Meeting Repository\n\nMeeting Notes Exercise\nPractice collaborating on meeting notes The purpose of this exercise is to get everyone involved in developing the meeting notes, and to engage in a few tips and tricks to make this process useful.\n\nOpen the Meeting Notes in Google Docs (put link here)\nTips for Team Google Docs\n\nNewer Information on Top! (so we don’t have to scroll and scroll to get to new info!)\nIf you like someone else’s comment, put a +1 next to it (if there’s already a +1, add another! +1 +1 +1)!!!\nAdd Links, Screenshots, Emojis, etc\nDuring sessions, write notes, questions, comments in that section.\nHave a short question, idea, or discussion point, but don’t want to interrupt? Put it here! Have an answer? Provide it!\nIf it turns out to be worthy of a larger response, then move it to Github Discussions (see more, below)\n\n\nUltimately, we ALL share in meeting notes, so that all ideas, questions, comments, etc are included in the notes.\n\n\nGithub Discussions\nUse Github Discussions for broad discussions across entire team. Meeting Github Discussions link here.\n📣 Announcements\n💡 Ideas\n🗳️ Polls\n🙏 Q&A\n🙌 Show and Tell",
    "crumbs": [
      "Workshop Exercises",
      "Meeting Notes"
    ]
  },
  {
    "objectID": "content/exercises/PAM-SI-Mtg-Exercises-ListAttendees.html",
    "href": "content/exercises/PAM-SI-Mtg-Exercises-ListAttendees.html",
    "title": "List Attendees",
    "section": "",
    "text": "Exercise: Insert List of Attendees Table for the Report.\n\nBefore you start…. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nCreate Attendees file\n\nOpen PAM-SI-Mtg-March2024 project in RStudio\nIn lower right hand corner, select ‘Files’ tab\nClick on the 📁text folder to open\nCreate a new quarto Document\n\nIn ‘Files’ tab, select New Blank File -&gt; Quarto Doc, Name “ListAttendees.qmd”\nOpen ListAttendees.qmd and set to Visual Editor\n\n\n\n\nEdit Attendees file\n\nAdd Attendee Table to ListAttendees.qmd\n\nInsert Table: In Visual Editor, select the Table dropdown menu to insert a table with as many rows as there are attendees, and with 3 columns. Enter “List of Attendees’ in the Caption.\nFill out the table with the names, Affiliations, and Emails for all attendees, like the example below. You can find this information in the ‘AttendeesIntros.qmd’ file created during the pre-meeting preparation (PAM-SI-Mtg-March2024/AttendeesIntros.qmd)\n\n\n\n\n\n\n\n\nName\nAffiliation\nEmail\n\n\n\n\nShannon Rankin\nSouthwest Fisheries Science Center\nshannon.rankin@noaa.gov\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFormat ListAttendees.qmd\n\nPlace cursor at top of ListAttendees.qmd page, and navigate to Visual Editor tool bar. Using the drop-down menu, change ‘Normal’ to ‘Header 1’.\nType ‘List of Attendees’ at top of page.\n\n\n\nLink ListAttendees.qmd to Report\n\nOpen the _quarto.yaml in the root directory and scroll down to the ‘chapters’\nPut the cursor after the index.qmd and hit ‘enter’ (this will increase the chances that your entry is properly aligned).\nIn this position, write ‘- text/ListAttendees.qmd’ (be sure there is only one space between the - and the word ‘content’)\n\n\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‘PAM-SI-Mtg-March2024’ repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‘commit’. For example, you may want to write “Add List of Attendees” and in details, state “Added List of Attendees table for Meeting report”.\nOnce the commit goes through– select ‘Push to Origin’ at the top. This will push changes to your Github repository.\nOpen associated Github Issue here, and make sure you’ve completed all tasks",
    "crumbs": [
      "Workshop Exercises",
      "List Attendees"
    ]
  },
  {
    "objectID": "content/exercises/PAM-SI-Mtg-Exercises-Acknowledge.html",
    "href": "content/exercises/PAM-SI-Mtg-Exercises-Acknowledge.html",
    "title": "Acknowledgements Text",
    "section": "",
    "text": "Exercise: Insert preliminary text for the Report Acknowledgements.\n\nBefore you start…. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nQuery Attendees using Github Discussions\n\nGo to PAM-SI-Mtg-March2024 Github Repository and Navigate to Discussions (here).\nClick on 🙏Q&A, click on ‘New Discussion’ with title “Request List of Acknowledgements’ and ask everyone to list any acknowledgements, including people and institutions who helped make this meeting happen.\n\n\n\nCreate Acknowledgements file\n\nOpen PAM-SI-Mtg-March2024 project in RStudio\nIn lower right hand corner, select ‘Files’ tab\nClick on the 📁text folder to open\nCreate a new quarto Document\n\nIn ‘Files’ tab, select New Blank File -&gt; Quarto Doc, Name “Acknowledgements.qmd”\nOpen Acknowledgements.qmd and set to Visual Editor\n\n\n\n\nEdit Acknowledgements file\n\nAdd draft text for Acknowledgements based on feedback from everyone.\nInclude names of all participants (we can remove authors at a later time).\nFormat Acknowledgements.qmd\n\nPlace cursor at top of Intro.qmd page, and navigate to Visual Editor tool bar. Using the drop-down menu, change ‘Normal’ to ‘Header 1’.\nType ‘Acknowledgements’ at top of page.\n\nLink Acknowledgements.qmd to Report\n\nOpen the _quarto.yml in the root directory and scroll down to the ‘chapters’. Here you’ll see a list of documents in the content folder that are serving as pages for the Report. Yaml documents are very fussy about specific formatting.\nPut the cursor after the index.qmd and hit ‘enter’ (this will increase the chances that your entry is properly aligned).\nIn this position, write ‘- content/Acknowledgements.qmd’ (be sure there is only one space between the - and the word ‘content’)\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‘PAM-SI-Mtg-March2024’ repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‘commit’. For example, you may want to write “Add Acknowledgements” and in details, state “Added draft acknowledgements text”.\nOnce the commit goes through– select ‘Push to Origin’ at the top. This will push changes to your Github repository.\n\nOpen associated Github Issue here, and make sure you’ve completed all tasks",
    "crumbs": [
      "Workshop Exercises",
      "Acknowledgements Text"
    ]
  },
  {
    "objectID": "content/Writers-Workshop.html",
    "href": "content/Writers-Workshop.html",
    "title": "Writers Workshop",
    "section": "",
    "text": "Writers Workshop is a weekly co-working meeting where we work on our individual projects together. It is especially difficult to stay focused while writing, and these workshops provide a level of accountability that helps us move our writing forward.\nMeetings are virtual and typically 2-3 hours in length. You should have your materials ready before the workshop begins, so you can focus on your writing.\n\nHave all your materials ready before the workshop begins. Identify a small manageable chunk of writing to complete during the workshop. For example, I will work on paragraph 3 of my introduction. If I have extra time, I will begin on my methods.\nTurn off ALL distractions (no email or web browser, turn off phone, etc)\nFirst 5 minutes of workshop– everyone briefly introduces the work they hope to complete in the first 90 min of the workshop.\nSelect a person to keep the time– they will give a 5 minute warning before the end of the 90 minutes.\nWork on your section with videos on, and your sound muted. Stay focused on your one specific goal and avoid all distractions. Do not do anything that would distract the others from their work.\nAt 90 min mark, everyone briefly discuss how things went (if they had any obstacles). Take a 15 minute break\nEveryone briefly discuss what they will do for the final 60 min of the workshop (one manageable chunk of writing). Identify a person to keep the time. Work quietly (with videos on, sound muted) until the 5 minute warning is given.\nEveryone give a brief update on what they accomplished, how they feel about their work.\n\nFor additional information:\nWriting Science: What makes scientific writing hard and how to make it easier (Kathleen Grogan). https://doi.org/10.1002/bes2.1800\nDefining the Role of Authors and Contributors (ICMJE). Link here.\nA guide to getting published in Ecology and Evolution (BES). Link here."
  },
  {
    "objectID": "content/Writers-Workshop.html#writers-workshop",
    "href": "content/Writers-Workshop.html#writers-workshop",
    "title": "Writers Workshop",
    "section": "",
    "text": "Writers Workshop is a weekly co-working meeting where we work on our individual projects together. It is especially difficult to stay focused while writing, and these workshops provide a level of accountability that helps us move our writing forward.\nMeetings are virtual and typically 2-3 hours in length. You should have your materials ready before the workshop begins, so you can focus on your writing.\n\nHave all your materials ready before the workshop begins. Identify a small manageable chunk of writing to complete during the workshop. For example, I will work on paragraph 3 of my introduction. If I have extra time, I will begin on my methods.\nTurn off ALL distractions (no email or web browser, turn off phone, etc)\nFirst 5 minutes of workshop– everyone briefly introduces the work they hope to complete in the first 90 min of the workshop.\nSelect a person to keep the time– they will give a 5 minute warning before the end of the 90 minutes.\nWork on your section with videos on, and your sound muted. Stay focused on your one specific goal and avoid all distractions. Do not do anything that would distract the others from their work.\nAt 90 min mark, everyone briefly discuss how things went (if they had any obstacles). Take a 15 minute break\nEveryone briefly discuss what they will do for the final 60 min of the workshop (one manageable chunk of writing). Identify a person to keep the time. Work quietly (with videos on, sound muted) until the 5 minute warning is given.\nEveryone give a brief update on what they accomplished, how they feel about their work.\n\nFor additional information:\nWriting Science: What makes scientific writing hard and how to make it easier (Kathleen Grogan). https://doi.org/10.1002/bes2.1800\nDefining the Role of Authors and Contributors (ICMJE). Link here.\nA guide to getting published in Ecology and Evolution (BES). Link here."
  },
  {
    "objectID": "content/CoWorking.html",
    "href": "content/CoWorking.html",
    "title": "Co-Working",
    "section": "",
    "text": "Writers Workshop is a weekly co-working meeting where we work on our individual projects together. It is especially difficult to stay focused while writing, and these workshops provide a level of accountability that helps us move our writing forward.\nMeetings are virtual and typically 2-3 hours in length. You should have your materials ready before the workshop begins, so you can focus on your writing.\n\nHave all your materials ready before the workshop begins. Identify a small manageable chunk of writing to complete during the workshop. For example, I will work on paragraph 3 of my introduction. If I have extra time, I will begin on my methods.\nTurn off ALL distractions (no email or web browser, turn off phone, etc)\nFirst 5 minutes of workshop– everyone briefly introduces the work they hope to complete in the first 90 min of the workshop.\nSelect a person to keep the time– they will give a 5 minute warning before the end of the 90 minutes.\nWork on your section with videos on, and your sound muted. Stay focused on your one specific goal and avoid all distractions. Do not do anything that would distract the others from their work.\nAt 90 min mark, everyone briefly discuss how things went (if they had any obstacles). Take a 15 minute break\nEveryone briefly discuss what they will do for the final 60 min of the workshop (one manageable chunk of writing). Identify a person to keep the time. Work quietly (with videos on, sound muted) until the 5 minute warning is given.\nEveryone give a brief update on what they accomplished, how they feel about their work.\n\nFor additional information:\nWriting Science: What makes scientific writing hard and how to make it easier (Kathleen Grogan). https://doi.org/10.1002/bes2.1800\nDefining the Role of Authors and Contributors (ICMJE). Link here.\nA guide to getting published in Ecology and Evolution (BES). Link here."
  },
  {
    "objectID": "content/CoWorking.html#co-working-writers-workshop",
    "href": "content/CoWorking.html#co-working-writers-workshop",
    "title": "Co-Working",
    "section": "",
    "text": "Writers Workshop is a weekly co-working meeting where we work on our individual projects together. It is especially difficult to stay focused while writing, and these workshops provide a level of accountability that helps us move our writing forward.\nMeetings are virtual and typically 2-3 hours in length. You should have your materials ready before the workshop begins, so you can focus on your writing.\n\nHave all your materials ready before the workshop begins. Identify a small manageable chunk of writing to complete during the workshop. For example, I will work on paragraph 3 of my introduction. If I have extra time, I will begin on my methods.\nTurn off ALL distractions (no email or web browser, turn off phone, etc)\nFirst 5 minutes of workshop– everyone briefly introduces the work they hope to complete in the first 90 min of the workshop.\nSelect a person to keep the time– they will give a 5 minute warning before the end of the 90 minutes.\nWork on your section with videos on, and your sound muted. Stay focused on your one specific goal and avoid all distractions. Do not do anything that would distract the others from their work.\nAt 90 min mark, everyone briefly discuss how things went (if they had any obstacles). Take a 15 minute break\nEveryone briefly discuss what they will do for the final 60 min of the workshop (one manageable chunk of writing). Identify a person to keep the time. Work quietly (with videos on, sound muted) until the 5 minute warning is given.\nEveryone give a brief update on what they accomplished, how they feel about their work.\n\nFor additional information:\nWriting Science: What makes scientific writing hard and how to make it easier (Kathleen Grogan). https://doi.org/10.1002/bes2.1800\nDefining the Role of Authors and Contributors (ICMJE). Link here.\nA guide to getting published in Ecology and Evolution (BES). Link here."
  },
  {
    "objectID": "content/resources.html",
    "href": "content/resources.html",
    "title": "Resources",
    "section": "",
    "text": "Resources for learning more about Open Science\n\nOpen Science\nOpenScapes- An organization to facilitate embracing the Open Science movement, including: resources, blog, and Openscapes Approach Guide (among other things).\nNMFS Open Science - Landing page for NMFS Open Science information and resources, including a Resource Book\n\n\nGithub\nNMFS Github Guide- Information, Best Practices, etc.\nIntro to Github- PSAW presentation by Eli Holmes\nGithub Strategies (Openscapes)\nGit for Humans Intro to Github for non-coders\nInstalling GitHub Desktop will install a platform for interacting with GitHub and also Git.\n\nVideo 1. Setting GitHub Desktop Preferences (2.5 mins) https://youtu.be/0PVOPL6i3MQ\nVideo 2. Cloning a repository (2 mins) https://youtu.be/acIwQO1eOtw\nVideo 3. Pulling and pushing changes to GitHub (3.5 mins) https://youtu.be/cQgn3_w27_8\n\n\n\nQuarto\nVideo Tutorial: Beautiful reports and presentations with Quarto (RStudio). Link here.\nQuarto Keynote Presentation at RStudio Conference.\nQuarto Tutorial (Openscapes)\n\n\nR and Tidyverse\n“You shouldn’t feel ashamed about your code- if it solves the problem, it’s perfect just the way it is. But also, it could always be better” Hadley Wickham\nWhy Tidy Data?(Openscapes)\nNMFS R User Group\nBig Book of R\nHappy Git with R (Jenny Bryan)\nCoding Strategies (Openscapes)\nName things deliberately (see 3 Rules for Naming Things)",
    "crumbs": [
      "Resources"
    ]
  },
  {
    "objectID": "content/add-content.html",
    "href": "content/add-content.html",
    "title": "Customize",
    "section": "",
    "text": "Edit the qmd or md files in the content folder. qmd files can include code (R, Python, Julia) and lots of Quarto markdown bells and whistles (like call-outs, cross-references, auto-citations and much more).\nEach page should start with\n---\ntitle: your title\n---\nand the first header will be the 2nd level, so ##. Note, there are situations where you leave off\n---\ntitle: your title\n---\nand start the qmd file with a level header #, but if using the default title yaml (in the --- fence) is a good habit since it makes it easy for Quarto convert your qmd file to other formats (like into a presentation)."
  },
  {
    "objectID": "content/add-content.html#edit-and-add-your-pages",
    "href": "content/add-content.html#edit-and-add-your-pages",
    "title": "Customize",
    "section": "",
    "text": "Edit the qmd or md files in the content folder. qmd files can include code (R, Python, Julia) and lots of Quarto markdown bells and whistles (like call-outs, cross-references, auto-citations and much more).\nEach page should start with\n---\ntitle: your title\n---\nand the first header will be the 2nd level, so ##. Note, there are situations where you leave off\n---\ntitle: your title\n---\nand start the qmd file with a level header #, but if using the default title yaml (in the --- fence) is a good habit since it makes it easy for Quarto convert your qmd file to other formats (like into a presentation)."
  },
  {
    "objectID": "content/add-content.html#add-your-pages-the-project",
    "href": "content/add-content.html#add-your-pages-the-project",
    "title": "Customize",
    "section": "Add your pages the project",
    "text": "Add your pages the project\n\nAdd the files to _quarto.yml"
  },
  {
    "objectID": "content/PAM-SI-Mtg-Prep.html",
    "href": "content/PAM-SI-Mtg-Prep.html",
    "title": "Prep for PAM-SI Meeting",
    "section": "",
    "text": "The tasks outlined below will help us practice working together with a shared Github Repository for the PAM-SI Meeting."
  },
  {
    "objectID": "content/PAM-SI-Mtg-Prep.html#preparation-for-the-pam-si-meeting",
    "href": "content/PAM-SI-Mtg-Prep.html#preparation-for-the-pam-si-meeting",
    "title": "Prep for PAM-SI Meeting",
    "section": "",
    "text": "The tasks outlined below will help us practice working together with a shared Github Repository for the PAM-SI Meeting."
  },
  {
    "objectID": "content/PAM-SI-Mtg-Prep.html#tasks-that-must-be-completed-by-all-participants-prior-to-the-pam-si-meeting",
    "href": "content/PAM-SI-Mtg-Prep.html#tasks-that-must-be-completed-by-all-participants-prior-to-the-pam-si-meeting",
    "title": "Prep for PAM-SI Meeting",
    "section": "Tasks that MUST be completed by ALL participants prior to the PAM-SI Meeting",
    "text": "Tasks that MUST be completed by ALL participants prior to the PAM-SI Meeting\n\nAdd Software Tools to your computer:\n\nGithub Desktop\n\nSign User Agreement (see NOAA Github Governance Team for more information)\nSEFSC specific user agreement; NEFSC specific user agreement\n\nRStudio (v2022.07.2 build 576 or later)\nR\nZotero\nCreate a Github Account\n\nRequest to join the PAM-SI Meeting Repository\n\nGo to the PAM-SI Meeting Github Repository (https://github.com/SAEL-SWFSC/PAM-SI-Mtg-March2024)\nCreate an Issue to request to join the repository.\n\nSelect ⊙ Issue (issue button) at the upper left, below the repository name, and to the right of the &lt;&gt;Code button\nSelect New Issue (green button to right) - Title = “Add me to Repository”, and in the Description, give your name, email, and Github name.\nclick ‘Submit New Issue’. I will add you to the repository as soon as I am able. Please ensure that you have your notifications set so that you will receive an email when you have been added, or when you are tagged in that repository.\n\nWhen you have been added to the repository, go to the next step\n\nClone PAM-SI Meeting Repository to your local computer using Github Desktop:\n\nOpen Github Desktop on the computer you will be bringing to the workshop\nFile -&gt; Clone Repository -&gt; URL\nPaste in the URL for the PAM-SI Meeting Repo (provide link here). Save to your Documents -&gt; Github folder using the defaults. It is highly recommended that you save Github Repository/RStudio Projects to these default locations (and for these instructions, we assume you will!). See Introduction to Git/Github tutorial for more help.\n\nCreate/Open project in RStudio.\n\nOpen RStudio\nIn the upper right hand corner of RStudio, select ‘New Project’ in the drop-down menu\n\nAdd a new R Project from an Existing Project. Browse to find the appropriate folder in Documents-&gt; Github. Note: Anytime you want to navigate to this project in RStudio, you can select it from the dropdown in this top right corner. If you want to use a new computer, you will need to repeat the steps of cloning the repository using Github Desktop, then creating a new project in RStudio.\n\n\nModify Document (Under Construction)\n\nIn the lower right section of RStudio, navigate to ‘Files’ and open the ‘Content’ folder. Find and Open the ‘AttendeeIntros.qmd’ file in RStudio (insert Screenshot)\nIn the newer RStudio, you can use the Quarto Visual Editor to modify documents. Please navigate to the ‘Visual’ editor (insert screenshot) to make modifications.\nAdd your name in BOLD, your affiliation in Italics, with a link to your lab or personal website, insert a picture of you, give a one sentence explanation of the work you do with NOAA Fisheries.\nSave the document\n\nCommit & Push to Github.\n\nOpen your project in Github Desktop; Github desktop will identify the changes you made (refresh if necessary).\nAt the bottom left, describe the modifications you made to the document, and then select ‘commit’.\nOnce the commit goes through– select ‘Push to Origin’ at the top. This will push changes to your Github repository.\n\nWe will adopt this process as our daily habit of working on your projects locally and saving your data to Github. We will go through this process to actively work on the Meeting Report together, during the meeting. Our goal is to have it almost entirely finished by the end of the meeting!"
  },
  {
    "objectID": "content/prep/PAM-SI-Mtg-Prep-step4.html",
    "href": "content/prep/PAM-SI-Mtg-Prep-step4.html",
    "title": "4. Update your Bio",
    "section": "",
    "text": "You can now test working on this project on your local computer and pushing changes to the shared repository. As an example, we’ll ask everyone to add information about YOU.\n\nModify Document (Under Construction)\n\nIn the lower right section of RStudio, navigate to ‘Files’ and ‘Content’. Find and Open the ‘AttendeeIntros.qmd’ file in RStudio\n\nIn newer RStudio versions, you can use the Quarto Visual Editor to modify documents. Please navigate to the ‘Visual’ editor to make modifications.\n\nSelect a picture of yourself to insert. You can either save the URL of an online image, or save a copy of the image to the following folder: PAM-SI-Mtg-March2024/text/images.\n\nClick on the Picture Icon in the Visual Editor Toolbar\n\nProvide the URL or browse to your saved image\n\nSelect ‘Header 3’ in Toolbar dropdown (default is ‘Normal’), then Type your Name and Institution and put your Institution in Italics (select and use the Italics button in toolbar). Put a link to your Institution or personal website using the 🔗 link button in the toolbar.\nOn the next line, type a few sentences about yourself.\nSave the document\n\nCommit & Push to Github.\n\nOpen your project in Github Desktop; Github desktop will identify the changes you made (refresh if necessary).\nAt the bottom left, describe the modifications you made to the document, and then select ‘commit’. For example, you may want to write “Add Bio” with details “Added my bio to AttendeeIntros.qmd for pre-meeting preparation”\n\nOnce the commit goes through– select ‘Push to Origin’ at the top. This will push changes to your Github repository.\n\n\nWe will adopt this process as our daily habit of working on your projects locally and saving your data to Github. We will go through this process to actively work on the Meeting Report together, during the meeting. Our goal is to have it almost entirely finished by the end of the meeting!\nNote: In case you are wondering why this does not render to html– note that it is currently set to render to docx (in docs folder), and we are working on rendering to html.",
    "crumbs": [
      "Pre Meeting Prep",
      "4. Update your Bio"
    ]
  },
  {
    "objectID": "content/prep/PAM-SI-Mtg-Prep-step1.html",
    "href": "content/prep/PAM-SI-Mtg-Prep-step1.html",
    "title": "1. Load Software",
    "section": "",
    "text": "Add Software Tools to your computer:\n\nGithub Desktop\n\nSign User Agreement (see NOAA Github Governance Team for more information)\nSEFSC specific user agreement; NEFSC specific user agreement\n\nRStudio (v2022.07.2 build 576 or later)\nR\nZotero\nCreate a Github Account",
    "crumbs": [
      "Pre Meeting Prep",
      "1. Load Software"
    ]
  },
  {
    "objectID": "content/acknowledgements.html",
    "href": "content/acknowledgements.html",
    "title": "Acknowledgments",
    "section": "",
    "text": "This repo and GitHub Action was based on the tutorial by Openscapes quarto-website-tutorial by Julia Lowndes and Stefanie Butland."
  },
  {
    "objectID": "content/Stack-Exchange.html",
    "href": "content/Stack-Exchange.html",
    "title": "Stack Exchange",
    "section": "",
    "text": "Stack Exchange is a publicly available crowd-sourced question and answer platform. Stack Exchange consists of many sites on different topics, including the original Stack Overflow (for programming questions), Biology, and even Bioacoustics. You can consider Stack Exchange as an Open Science platform for sharing knowledge.\nThe Bioacoustics Stack Exchange (BSE) is a question and answer site for people interested in the studies of non-human animal sounds and the impacts of sounds on animals. If you have a question- or if someone asks YOU a question– consider asking these questions here. This information is publicly available and archived– and new, updated information can be added in the future.\n\nJoin: Register for Stack Exchange and join Bioacoustics Stack Exchange\nSearch: Learn how to search for questions\n\nGo to BSE site: https://bioacoustics.stackexchange.com/\nSearch for your topic of interest (top search bar), or look at Tags (left menu)\n\nAsk a Question: Learn how to write a good question (see here and here). Be thoughtful and thorough in your question– provide enough information so that the readers know the context and the specific question (s) you have. Show your research (what did you do to try to answer the question yourself)? Poorly asked questions can lead to confusion and answers that may not be helpful. If you post a question– come back to find the answers. Did you get a complete answer? If so, accept the answer. Are you confused by the answer(s), then comment on those answers to clear that up.\nAnswer a Question: Learn how to write a good answer (see here and here). Answers should provide Answers. If you have a question or remark about the question– you can post a comment. Comments are considered temporary notes, while Answers are archived.\nShare what you learn! Want to share your own knowledge? YES, it is ok to answer your own questions! See more here.",
    "crumbs": [
      "Bioacoustics Stack Exchange"
    ]
  },
  {
    "objectID": "content/Stack-Exchange.html#bioacoustics-stack-exchange",
    "href": "content/Stack-Exchange.html#bioacoustics-stack-exchange",
    "title": "Stack Exchange",
    "section": "",
    "text": "Stack Exchange is a publicly available crowd-sourced question and answer platform. Stack Exchange consists of many sites on different topics, including the original Stack Overflow (for programming questions), Biology, and even Bioacoustics. You can consider Stack Exchange as an Open Science platform for sharing knowledge.\nThe Bioacoustics Stack Exchange (BSE) is a question and answer site for people interested in the studies of non-human animal sounds and the impacts of sounds on animals. If you have a question- or if someone asks YOU a question– consider asking these questions here. This information is publicly available and archived– and new, updated information can be added in the future.\n\nJoin: Register for Stack Exchange and join Bioacoustics Stack Exchange\nSearch: Learn how to search for questions\n\nGo to BSE site: https://bioacoustics.stackexchange.com/\nSearch for your topic of interest (top search bar), or look at Tags (left menu)\n\nAsk a Question: Learn how to write a good question (see here and here). Be thoughtful and thorough in your question– provide enough information so that the readers know the context and the specific question (s) you have. Show your research (what did you do to try to answer the question yourself)? Poorly asked questions can lead to confusion and answers that may not be helpful. If you post a question– come back to find the answers. Did you get a complete answer? If so, accept the answer. Are you confused by the answer(s), then comment on those answers to clear that up.\nAnswer a Question: Learn how to write a good answer (see here and here). Answers should provide Answers. If you have a question or remark about the question– you can post a comment. Comments are considered temporary notes, while Answers are archived.\nShare what you learn! Want to share your own knowledge? YES, it is ok to answer your own questions! See more here.",
    "crumbs": [
      "Bioacoustics Stack Exchange"
    ]
  }
]